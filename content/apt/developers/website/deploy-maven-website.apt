 ------
 Deploy Maven Website
 ------
 Barrie Treloar
 ------
 2012-12-11
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Introduction

 This document gives step-by-step instructions for deploying the Maven website {{{http://maven.apache.org}http://maven.apache.org}}.

 Since 10th Decemeber 2012, the main website use CMS mechanism. (see {{{https://cms.apache.org/maven}https://cms.apache.org/maven}}).

 You can edit pages in two ways:

 * use the CMS UI.

 * checkout the content locally and modify manually.

 []

How it works

  At least how a user understand that.

  All the content is located here https://svn.apache.org/repos/infra/websites/production/maven/content/ then synced to lives machines.

  For parts edited/build with CMS, two buildbot jobs build the content via using Maven site plugin:

  * {{{http://ci.apache.org/builders/maven-site-staging}http://ci.apache.org/builders/maven-site-staging}}

  * {{{http://ci.apache.org/builders/maven-doxia-site-staging}http://ci.apache.org/builders/maven-doxia-site-staging}}

  []

  Other parts can committed to the content source tree.
  
  As CMS will delete non build content, they must be ignored with adding paths in extpaths.txt file (located in site and doxia-site in path content/resources)

* Modify Maven Website with CMS UI

  * Go to {{{https://cms.apache.org/maven}https://cms.apache.org/maven}}.

  * Click link "Get maven Working Copy"

  * Now navigate to the content you want to modify

  * Once you have modify the content, you can now commit with the button "Submit".

  []

* Modify Maven Website with a local copy

 [[1]] Do a fresh check out of the Maven site, for example:

+-----+
$ svn checkout https://svn.apache.org/repos/asf/maven/site site
+-----+

 [[2]] Execute the site goal

+-----+
site$ mvn site 
+-----+

 [[3]] Verify the documentation before committing

Publish content

  * Verify staging content has been build with buildbot job {{http://ci.apache.org/builders/maven-site-staging}} and {{http://maven.staging.apache.org/plugins/}} 

  * Build finish, publish modifications using {{https://cms.apache.org/maven/publish}}