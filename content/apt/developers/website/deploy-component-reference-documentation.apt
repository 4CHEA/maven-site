 ------
 Deploy Maven Component Reference Documentation
 ------
 Barrie Treloar
 Herv√© Boutemy
 ------
 2013-09-23
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Introduction

 This document gives step-by-step instructions for deploying 
 Maven components reference documentation inside the Maven {{{http://maven.apache.org}http://maven.apache.org}} website.

 See {{{./index.html}Maven website introduction}} for instructions on the whole website publication (main site content + components).


Overview

 Since December 2012, the overall website uses svnpubsub mechanism:

[component-reference-documentation.png] Components reference documentation mechanisms overview


How components reference documentation publication works

 Components don't use CMS: components reference documentation are versioned and generated from full sources, with both handwritten content (like Maven main site)
 and content generated from sources (javadoc, unit-test results, integration test results...).


* Staging component reference documentation

 Reference documentation of a component is staged in <<<http://maven.apache.org/xxx-archives/yyy-LATEST>>>, where <<<yyy>>> is the
 component name and <<<xxx>>> can be:

 * the component type, like <<<shared>>>, <<<plugins>>>, <<<skins>>>, ... (see
 {{/shared-archives}}, {{/plugins-archives}}, {{/skins/archives}})

 * the component name for standalone components, like <<<archetype>>>, <<<plugin-tools>>>, <<<surefire>>>, <<<wagon>>>, ...
 (see {{/archetype-archives}}, {{/plugin-tools-archives}}, {{/surefire-archives}}, {{/wagon-archives}})

 []

 To publish component reference documentation:

 [[0]] prerequisite: eventually build the component if it has not been done previously, or some reports may miss build or integration information:

+----------+
mvn -Prun-its install
+----------+

 [[1]] build the reference documentation:

+----------+
mvn -Preporting site
+----------+

 [[2]] if the component has multiple modules, locally stage the site:

+----------+
mvn site:stage
+----------+

 [[3]] stage the reference documentation to website production svn area, using
 {{{/plugins/maven-scm-publish-plugin}maven-scm-publish-plugin}}: (TODO: explanations on configuration in pom to xxx-LATEST)

+----------+
mvn scm-publish:publish-scm
+----------+

 svnpubsub mecanism transfers svn production content to live production site

   []

 []

 <<Notice>>: to avoid published content do disappear when Maven main content si published (see
 {{{./deploy-maven-website.html}documentation}} for more details), check that the <<</xxx-archives>>> path
 is properly declared in {{{/extpaths.txt}<<<extpaths.txt>>>}}.

* Publishing versioned component reference documentation

 When doing a release, yyy-LATEST content staged in previous section needs:

 [[1]] to be archived to versioned directory before a newer revision is published into -LATEST,

 [[2]] to replace the actual component reference documentation.

 []

 This is done with operations on website production svn area, either with <<<svn>>> command:

+----------+
svn cp https://svn.apache.org/repos/infra/websites/production/maven/content/xxx-archives/yyy-LATEST https://svn.apache.org/repos/infra/websites/production/maven/content/xxx-archives/yyy-$version
svn rm https://svn.apache.org/repos/infra/websites/production/maven/content/xxx/yyy
svn cp https://svn.apache.org/repos/infra/websites/production/maven/content/xxx-archives/yyy-$version https://svn.apache.org/repos/infra/websites/production/maven/content/xxx/yyy
+----------+

 or with {{{http://svnbook.red-bean.com/en/1.8/svn.ref.svnmucc.re.html}<<<svnmucc>>> command}}:

+----------+
svnmucc -U https://svn.apache.org/repos/infra/websites/production/maven/content \
  cp HEAD xxx-archives/yyy-LATEST xxx-archives/yyy-$version \
  rm xxx/yyy \
  cp HEAD xxx-archives/yyy-$version xxx/yyy
+----------+
